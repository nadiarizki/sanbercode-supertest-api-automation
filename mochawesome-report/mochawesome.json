{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-17T07:43:40.500Z",
    "end": "2024-09-17T07:43:42.028Z",
    "duration": 1528,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "337b5057-9784-417e-acfa-714ebcfc3a68",
      "title": "",
      "fullFile": "D:\\Automation Nad\\Sanbercode\\Tugas3\\test\\categoryCRUD.js",
      "file": "\\test\\categoryCRUD.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9230bf92-26e2-4b5f-8e3d-21365d213c63",
          "title": "Category CRUD",
          "fullFile": "D:\\Automation Nad\\Sanbercode\\Tugas3\\test\\categoryCRUD.js",
          "file": "\\test\\categoryCRUD.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Category CRUD\"",
              "fullTitle": "Category CRUD \"before all\" hook in \"Category CRUD\"",
              "timedOut": false,
              "duration": 1011,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "token = await getToken();",
              "err": {},
              "uuid": "cdc28f5c-ff3c-434a-bf25-0d5a864d1090",
              "parentUUID": "9230bf92-26e2-4b5f-8e3d-21365d213c63",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a category",
              "fullTitle": "Category CRUD successfully adds a category",
              "timedOut": false,
              "duration": 173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    \"name\": \"makanan ringan\",\n    \"description\": \"makanan ringan dari indofood\"\n};\nconst response = await request(baseUrl)\n    .post(\"/categories\")\n    .send(payload)\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", `Bearer ${token}`);\nexpect(response.statusCode).to.equal(201);   \nexpect(response.body.status).to.equal(\"success\"); \nexpect(response.body.message).to.equal(\"Category berhasil ditambahkan\");\nexpect(response.body.data.name).to.equal(\"makanan ringan\");\n \ncategoryId = response.body.data.categoryId;\nconsole.log(categoryId);",
              "err": {},
              "uuid": "1681c4b8-a3b0-4777-88f4-72fc57996895",
              "parentUUID": "9230bf92-26e2-4b5f-8e3d-21365d213c63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully retrieves the category",
              "fullTitle": "Category CRUD successfully retrieves the category",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n    .get(`/categories/${categoryId}`)\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", `Bearer ${token}`);\nexpect(response.statusCode).to.equal(200);    \nexpect(response.body.status).to.equal(\"success\");\nexpect(response.body.data.category.name).to.equal(\"makanan ringan\");\nexpect(response.body.data.category.description).to.equal(\"makanan ringan dari indofood\");\n       \n// assert json schema\nconst schemaPath = \"resource/getCategorySchema.json\";\nconst jsonSchema = JSON.parse(fs.readFileSync(schemaPath, 'utf8'))\nexpect(response.body).to.be.jsonSchema(jsonSchema);",
              "err": {},
              "uuid": "714570a2-ed55-487f-a7a6-665e916afe78",
              "parentUUID": "9230bf92-26e2-4b5f-8e3d-21365d213c63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully updates the category",
              "fullTitle": "Category CRUD successfully updates the category",
              "timedOut": false,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {                \n    \"name\": \"update makanan ringan\",\n    \"description\": \"update makanan ringan dari indofood\"\n};\nconst response = await request(baseUrl)\n    .put(`/categories/${categoryId}`)\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", `Bearer ${token}`)\n    .send(payload);\nexpect(response.statusCode).to.equal(200);   \nexpect(response.body.status).to.equal(\"success\"); \nexpect(response.body.data.name).to.equal(\"update makanan ringan\");",
              "err": {},
              "uuid": "5147b07c-279d-4c8c-9607-2724533b49d9",
              "parentUUID": "9230bf92-26e2-4b5f-8e3d-21365d213c63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully deletes the category",
              "fullTitle": "Category CRUD successfully deletes the category",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n    .delete(`/categories/${categoryId}`)\n    .set(\"Content-Type\", \"application/json\")\n    .set(\"Authorization\", `Bearer ${token}`);\nexpect(response.statusCode).to.equal(200); \nexpect(response.body.status).to.equal(\"success\"); \nconsole.log(response.body);",
              "err": {},
              "uuid": "87ff3dd3-b2d7-45bd-a589-7f37f7b625d9",
              "parentUUID": "9230bf92-26e2-4b5f-8e3d-21365d213c63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1681c4b8-a3b0-4777-88f4-72fc57996895",
            "714570a2-ed55-487f-a7a6-665e916afe78",
            "5147b07c-279d-4c8c-9607-2724533b49d9",
            "87ff3dd3-b2d7-45bd-a589-7f37f7b625d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 497,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}